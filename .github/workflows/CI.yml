# from https://discourse.julialang.org/t/easy-workflow-file-for-setting-up-github-actions-ci-for-your-julia-package/49765

name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 'min' # the minimum Julia version that your package supports
          - '1'   # will automatically expand to the latest stable 1.x release of Julia.
          # NOTE: CI on nightly is not enabled by default, uncomment if you need it. Cf the discussion at
          # https://discourse.julialang.org/t/why-do-packages-run-continuous-integration-tests-on-julia-nightly/101208/3
          # - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    env:
      CMDSTAN_VERSION: "2.36.0"
    steps:
      - run: echo "JULIA_CMDSTAN_HOME=$HOME/cmdstan-$CMDSTAN_VERSION/" >> $GITHUB_ENV
      - run: echo "CMDSTAN_URL=https://github.com/stan-dev/cmdstan/releases/download/v$CMDSTAN_VERSION/cmdstan-$CMDSTAN_VERSION.tar.gz" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - run: wget -O ~/cmdstan.tar.gz $CMDSTAN_URL
      - run: tar -C ~ -zxpvf ~/cmdstan.tar.gz
      - run: make -C $JULIA_CMDSTAN_HOME build
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          file: lcov.info
          # NOTE: you need to add the token to Github secrets, see
          # https://docs.codecov.com/docs/adding-the-codecov-token
          token: ${{ secrets.CODECOV_TOKEN }}
